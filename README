zencat
======

Please note that at the moment this is VERY VERY half-baked and should probably 
not be used by anyone. 

As in `cat` to IRC to interact with Zenoss.

zencat listens on a specific IP:port the same way IRCcat does. In addition,
it also accepts various commands over IRC to interact with a Zenoss instance.
Currently it can be used to list, acknowledge, and unacknowledge Zenoss events.


Installation
------------
Edit the zencat.xml so it knows which irc server, channel etc..
Edit the JsonApi.java so it knows which Zenoss server and user.
Check you have sun jvm >=1.5 (java -version)

This will build and package zencat as a jar:

$ ant dist

Then, using the appropriate config file:

$ ant -Dconfigfile=./examples/zencat.xml run

Also, you'll want to install netcat.


Sending text to IRC
-------------------
By default zencat listens on 127.0.0.1:54321, and sends data to the 
#noc channel.  In a networked server environment you will 
probably want to make it listen on the private LAN interface.

Examples: 

$ echo "Hello World" | netcat -q0 localhost 54321
$ tail -f /var/log/www/error.log | netcat localhost 54321

In a server environment, consider adding a hostname to your internal DNS or 
using a virtual IP for zencat to listen on, in case you want to move irccat
to another box later.


Sending to specific channels
----------------------------
To send to a specific channel rather than the default, put the channel name
as the first word in the data (the channel name will be stripped):

$ echo "#mychannel hello world" | netcat -q0 machinename 12345

This sends "hello world" to #mychannel

First word defines the recipients, you can use comma separated list. 
# prefix indicates channel, @ indicates a nick.

Examples:

	- "#chan blah blah"
	  just sends to #chan

	- "@RJ psst, this is a pm"
	  just sends via PM to user RJ

	- "#channel1,#channel2,@RJ,@Russ blah blah this is the message"
	  this sends to 2 channels, and 2 users (RJ, Russ)

	- "#* Attention, something important"
	  this sends to all channels the bot is in	


Built-in commands
-----------------
There are a handful of built-in commands for instructing the bot at runtime.

Built-in commands are prefixed with a !

	!join #chan pass		- joins another channel. pass is optional
	!part #chan				- parts chan
	!channels				- lists channels the bot is in
	!spam blah blah..		- repeats your message in all joined channels
	!exit					- System.exit()

Zenoss commands
-----------------
These commands are used to interact with your Zenoss server.
Zenoss commands are also prefixed with a !

	!events				- lists all events
	!ack eventID			- acknowledges event with given ID
	!unack eventID			- unacknowledges the given event
	!close eventID			- closes the given event

Trust
-----

Any command (?.. !..) uttered in a channel with zencat in is executed and 
implicitly trusted. 

Any command PMed to zencat is ignored unless the user 
is joined to the #noc channel.


SVN commit notifications
------------------------
svn hooks let you announce commits etc.
For example, try this in your SVN repo/hooks/post-commit file:

REPOS="$1"
REV="$2"
LOG=`/usr/bin/svnlook log -r $REV $REPOS`
AUTHOR=`/usr/bin/svnlook author -r $REV $REPOS`
echo "SVN commit by $AUTHOR (r$REV) '$LOG' http://web-svn-interface.example.com/?rev=$REV" | netcat -q0 machinename 54321


Zenoss alerts to irc
--------------------
In the event command manager:

event command: /bin/echo "EVENT -- '${evt/evid}' -- '${evt/device}' -- '${evt/summary}'" | /bin/netcat -q0 localhost 54321
clear command /bin/echo "CLEAR -- '${evt/evid}' -- '${evt/device}' -- '${evt/summary}'" | /bin/netcat -q0 localhost 54321


Nagios alerts to irc
--------------------
Buried in our nagios config is this, from misccommands.cfg:

define command {
    command_name    host-notify-by-irc
    command_line    /bin/echo "#sys Nagios: Host '$HOSTALIAS$' is $HOSTSTATE$ - Info: $OUTPUT$" | /bin/netcat -q 1 zencathost 54321
}

define command {
    command_name    service-notify-by-irc
    command_line    /bin/echo "#sys Nagios: Service $SERVICEDESC$ on '$HOSTALIAS$' is $SERVICESTATE$ - Info: $OUTPUT$" | /bin/netcat -q 1 zencathost 54321
}

And in contacts.cfg:

define contact{
        contact_name                    zencat
        alias                   zencat
        service_notification_period     24x7
        host_notification_period        24x7
        service_notification_options    w,c,r
        host_notification_options       d,r
        service_notification_commands service-notify-by-irc
        host_notification_commands  host-notify-by-irc
        email   blah@blah
}

Feedback
--------
Email:  katherine.daniels@livestream.com
